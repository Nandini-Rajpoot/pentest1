import requests

def test_session_hijacking_and_cookie_theft(url):
    # Send a request to the target URL to obtain initial cookies
    try:
        response = requests.get(url)
        initial_cookies = response.cookies
    except requests.exceptions.RequestException as e:
        return {"error": str(e)}

    # Modify the obtained cookies and resend the request
    modified_cookies = initial_cookies.copy()
    modified_cookies["session_id"] = "malicious_session_id"

    try:
        vul = {}
        response_with_modified_cookies = requests.get(url, cookies=modified_cookies)
        if response_with_modified_cookies.status_code == 200:
            vul['is_vulnerable'] = True
            vul['initial_cookies'] = initial_cookies
            vul['modified_cookies'] = modified_cookies
        else:
            vul['is_vulnerable'] = False
            vul['initial_cookies'] = initial_cookies
            vul['modified_cookies'] = modified_cookies
        return vul
    except requests.exceptions.RequestException as e:
        return {"error": str(e)}

if __name__ == "__main__":
    # Example usage
    website_url = "http://bbdu.ac.in/"
    test_result = test_session_hijacking_and_cookie_theft(website_url)
    print("Test Result:")
    print(test_result)
