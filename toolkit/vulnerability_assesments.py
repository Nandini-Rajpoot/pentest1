# write function to check xss and csrf vulnerabilities of a website pages, based on the website url given as params and return the results as a dictionary

import requests
from bs4 import BeautifulSoup
import re

def check_xss_csrf_vulnerabilities(url):
    '''Check for XSS and CSRF vulnerabilities in a website'''
    # Initialize the dictionary to store results
    results = {
        'url': url
    }
    # Use requests library to get the HTML content of the website
    response = requests.get('http://' + url)
    html_content = response.text
    
    # Use BeautifulSoup to parse the HTML content
    soup = BeautifulSoup(html_content, 'html.parser')
    # Check for XSS vulnerabilities
    xss_vulnerabilities = []
    for tag in soup.find_all():
        for attribute in tag.attrs:
            value = tag[attribute]
            try:
                if re.search(r'<script>', value):
                    xss_vulnerabilities.append((tag.name, attribute, value))
            except Exception as e:
                pass
    results['xss_vulnerabilities'] = xss_vulnerabilities or ""

    # Check for CSRF vulnerabilities
    csrf_vulnerabilities = []
    for form in soup.find_all('form'):
        if not form.find('input', {'type': 'hidden', 'name': 'csrf_token'}):
            csrf_vulnerabilities.append(form)
    results['csrf_vulnerabilities'] = csrf_vulnerabilities or ""

    return results

# Test the function
if __name__ == '__main__':
    results = check_xss_csrf_vulnerabilities('bbdu.ac.in')
    with open('media/website/logs/example.com.log', 'a') as f:
        f.write(str(results) + '\n')
    print(results)

# django model for storing the test results
