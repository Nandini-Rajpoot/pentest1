# Mobile application penetration testing is performed on mobile applications (excluding mobile APIs and servers).
from models import TestLog, Project, TestResult, TestType, Vulnerability
import subprocess
import requests
import frida
from mitmproxy import http

def send_request(url):
    try:
        response = requests.get(url)
        print(f'Response code: {response.status_code}')
        print(f'Response body: {response.text}')
    except requests.exceptions.RequestException as err:
        print(f'Error: {err}')

def frida_process(process_name, module_name, offset):
    def on_message(message, data):
        print(message)

    session = frida.get_usb_device().attach(process_name)

    script = session.create_script(f"""
        // Find the base address of the module you're interested in
        var base = Module.findBaseAddress('{module_name}');

        // Replace the offset with the actual offset of the function you want to hook
        var offset = {offset};  
    """)

    script.on('message', on_message)
    script.load()

# Usage
url = 'http://example.com'  
send_request(url)

process_name = 'com.example.app'
module_name = 'libtarget.so'
offset = 0x1234
frida_process(process_name, module_name, offset)


def run_mitmproxy(script_path):
    # The command to run mitmproxy
    command = f'mitmproxy -s {script_path}'

    # Run the command
    subprocess.run(command, shell=True)

# Usage
script_path = '/path/to/your/script.py'
run_mitmproxy(script_path)




def run_needle(needle_path, device_ip, device_port, username, password, module, app_id):
    # The command to run Needle
    command = f'{needle_path} -r {device_ip}:{device_port} -u {username} -p {password} -m {module} -t {app_id}'

    # Run the command
    subprocess.run(command, shell=True)


    
    # download needle 
    needle_path = '/path/to/needle'
    device_ip = '192.168.1.2'
    device_port = 22
    username = 'root'
    password = 'alpine'
    module = 'binary/info'
    app_id = 'com.example.app'
    run_needle(needle_path, device_ip, device_port, username, password, module, app_id)